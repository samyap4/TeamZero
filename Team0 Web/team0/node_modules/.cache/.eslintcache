[{"/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/index.js":"1","/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/App.js":"2","/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/components/LoginButton.js":"3","/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/components/LogoutButton.js":"4","/Users/samyapkowitz/Desktop/Code/Team0/team0/src/index.js":"5","/Users/samyapkowitz/Desktop/Code/Team0/team0/src/App.js":"6","/Users/samyapkowitz/Desktop/Code/Team0/team0/src/components/LoginButton.js":"7","/Users/samyapkowitz/Desktop/Code/Team0/team0/src/components/LogoutButton.js":"8"},{"size":414,"mtime":1649700047641,"results":"9","hashOfConfig":"10"},{"size":732,"mtime":1649700694005,"results":"11","hashOfConfig":"10"},{"size":423,"mtime":1649694697916,"results":"12","hashOfConfig":"10"},{"size":392,"mtime":1649694731768,"results":"13","hashOfConfig":"10"},{"size":436,"mtime":1650295216371,"results":"14","hashOfConfig":"15"},{"size":14303,"mtime":1650303089684,"results":"16","hashOfConfig":"15"},{"size":689,"mtime":1650297149565,"results":"17","hashOfConfig":"15"},{"size":606,"mtime":1650297357266,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"x0s22y",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1rytmv5",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/index.js",[],[],["46","47"],"/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/App.js",[],[],"/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/components/LoginButton.js",[],[],"/Users/samyapkowitz/Desktop/Code/Portal0/portal0/src/components/LogoutButton.js",[],[],"/Users/samyapkowitz/Desktop/Code/Team0/team0/src/index.js",[],[],["48","49"],"/Users/samyapkowitz/Desktop/Code/Team0/team0/src/App.js",["50","51","52","53","54"],[],"import React, { useEffect, useState, Fragment } from 'react'\nimport LoginButton from './components/LoginButton'\nimport LogoutButton from './components/LogoutButton'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { Listbox, Transition, Disclosure, Menu } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { BellIcon, UserIcon } from '@heroicons/react/outline'\n\nexport default function App() {\n  const {user, loginWithRedirect} = useAuth0();\n  const [organization, setOrganization] = useState();\n  const [email, setEmail] = useState();\n  const [organizations, setOrganizations] = useState();\n  const [profileImage, setProfileImage] = useState();\n\n  useEffect(() => {\n    if (organizations) {\n      if (organizations.length > 1) {\n        setOrganization(organizations[0]);\n      } else {\n        loginWithRedirect({organization: organizations[0].id, login_hint: email});\n      }\n    }\n  }, [organizations]);\n\n  useEffect(() => {\n    if (user) {\n      getOrg(user.org_id);\n      setProfileImage(user.picture)\n    } else {\n      setProfileImage(undefined);\n    }\n  }, [user]);\n\n  const getOrgs = () => {\n    fetch('http://localhost:8080/user-orgs-by-email?email=' + email)\n    .then(response => response.json())\n    .then(data => data.length > 0 ? setOrganizations(data) : loginWithRedirect({login_hint: email}));\n  }\n\n  const getOrg = () => {\n    fetch('http://localhost:8080/org-by-id?org_id=' + user.org_id)\n    .then(response => response.json())\n    .then(data => setOrganization(data));\n  }\n \n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    getOrgs();\n  }\n\n  const classNames = (...classes) => {\n    return classes.filter(Boolean).join(' ')\n  }\n\n  const navigation = [\n    { name: 'Dashboard', href: '#', current: true },\n    // { name: 'Team', href: '#', current: false },\n    // { name: 'Projects', href: '#', current: false },\n    // { name: 'Calendar', href: '#', current: false },\n  ]\n  \n  return (\n    <>\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <img\n                    className=\"block lg:hidden h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                    alt=\"Workflow\"\n                  />\n                  <img\n                    className=\"hidden lg:block h-8 w-auto\"\n                    src={organization && user ? organization.branding.logo_url : \"https://i.ibb.co/SwxJtJw/Screen-Shot-2022-04-18-at-12-02-48-PM-removebg-preview.png\"}\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                          item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                          'px-3 py-2 rounded-md text-sm font-medium'\n                        )}\n                        aria-current={item.current ? 'page' : undefined}\n                      >\n                        {item.name}\n                      </a>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <button\n                  type=\"button\"\n                  className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\n                >\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"ml-3 relative\">\n                  <div>\n                    <Menu.Button className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white text-gray-400 hover:text-white\">\n                      <span className=\"sr-only\">Open user menu</span>\n                      {profileImage ? <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src={profileImage}\n                        alt=\"\"\n                      /> :\n                      <UserIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>}\n                      \n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Your Profile\n                          </a>\n                        )}\n                      </Menu.Item>\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Settings\n                          </a>\n                        )}\n                      </Menu.Item>\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Sign out\n                          </a>\n                        )}\n                      </Menu.Item>\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <Disclosure.Button\n                  key={item.name}\n                  as=\"a\"\n                  href={item.href}\n                  className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                  )}\n                  aria-current={item.current ? 'page' : undefined}\n                >\n                  {item.name}\n                </Disclosure.Button>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n    <div style={{width:\"300px\", margin:\"0 auto\"}}>\n      {!user && \n        <>\n          <br></br>\n          <br></br>\n          <form onSubmit={handleSubmit}>\n            <div class=\"mb-6\">\n              <label for=\"email\" class=\"block mb-2 text-sm font-medium text-black-900 dark:text-black-300\">Email:</label>\n              <input type=\"email\" onChange={e => setEmail(e.target.value)} id=\"email\" class=\"bg-white-50 border border-gray-300 text-black-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-white-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-black dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"name@team0.com\" required/>\n            </div>\n            <button type=\"submit\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Submit</button>\n          </form>\n          <br></br>\n          <br></br>\n        </>\n      }\n      {organizations && organization &&\n        <>\n          <Listbox value={organization} onChange={setOrganization}>\n            {({ open }) => (\n              <>\n                <Listbox.Label className=\"block text-sm font-medium text-gray-700\">Team:</Listbox.Label>\n                <div className=\"mt-1 relative\">\n                  <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                    <span className=\"flex items-center\">\n                      <img src={organization.branding.logo_url} alt=\"\" className=\"flex-shrink-0 h-6 w-6 rounded-full\" />\n                      <span className=\"ml-3 block truncate\">{organization.display_name}</span>\n                    </span>\n                    <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                      <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    </span>\n                  </Listbox.Button>\n\n                  <Transition\n                    show={open}\n                    as={Fragment}\n                    leave=\"transition ease-in duration-100\"\n                    leaveFrom=\"opacity-100\"\n                    leaveTo=\"opacity-0\"\n                  >\n                    <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                      {organizations.map((org) => (\n                        <Listbox.Option\n                          key={org.id}\n                          className={({ active }) =>\n                            classNames(\n                              active ? 'text-white bg-indigo-600' : 'text-gray-900',\n                              'cursor-default select-none relative py-2 pl-3 pr-9'\n                            )\n                          }\n                          value={org}\n                        >\n                          {({ selected, active }) => (\n                            <>\n                              <div className=\"flex items-center\">\n                                <img src={org.branding.logo_url} alt=\"\" className=\"flex-shrink-0 h-6 w-6 rounded-full\" />\n                                <span\n                                  className={classNames(selected ? 'font-semibold' : 'font-normal', 'ml-3 block truncate')}\n                                >\n                                  {org.display_name}\n                                </span>\n                              </div>\n\n                              {selected ? (\n                                <span\n                                  className={classNames(\n                                    active ? 'text-white' : 'text-indigo-600',\n                                    'absolute inset-y-0 right-0 flex items-center pr-4'\n                                  )}\n                                >\n                                  <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                </span>\n                              ) : null}\n                            </>\n                          )}\n                        </Listbox.Option>\n                      ))}\n                    </Listbox.Options>\n                  </Transition>\n                </div>\n              </>\n            )}\n          </Listbox>\n          <br></br>\n          <LoginButton organization={organization.id} email={email}/>\n        </>\n      }\n      {user &&\n        <div style={{margin: 'auto'}}>\n          <br></br>\n          <br></br>\n          <div class=\"relative shadow-md sm:rounded-lg\">\n              <table class=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                  <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                      <tr>\n                          <th scope=\"col\" class=\"px-6 py-3\">\n                              First Name\n                          </th>\n                          <th scope=\"col\" class=\"px-6 py-3\">\n                              Email\n                          </th>\n                          <th scope=\"col\" class=\"px-6 py-3\">\n                              Team Name\n                          </th>\n                      </tr>\n                  </thead>\n                  <tbody>\n                      <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\n                          <th scope=\"row\" class=\"px-12 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\">\n                            {user.nickname}\n                          </th>\n                          <td class=\"px-6 py-4 dark:text-white whitespace-nowrap font-medium\">\n                            {user.email}\n                          </td>\n                          <td class=\"px-12 py-4 dark:text-white whitespace-nowrap font-medium\">\n                            {organization ? organization.display_name : ''}\n                          </td>\n                      </tr>\n                  </tbody>\n              </table>\n          </div>\n          <br></br>\n          <LogoutButton />\n        </div>\n      }\n    </div>\n    </>\n  )\n}","/Users/samyapkowitz/Desktop/Code/Team0/team0/src/components/LoginButton.js",[],[],"/Users/samyapkowitz/Desktop/Code/Team0/team0/src/components/LogoutButton.js",[],[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":24,"column":6,"nodeType":"63","endLine":24,"endColumn":21,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":33,"column":6,"nodeType":"63","endLine":33,"endColumn":12,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":136,"column":27,"nodeType":"69","endLine":139,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":146,"column":27,"nodeType":"69","endLine":149,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":156,"column":27,"nodeType":"69","endLine":159,"endColumn":28},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'email' and 'loginWithRedirect'. Either include them or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'getOrg'. Either include it or remove the dependency array.",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [email, loginWithRedirect, organizations]",{"range":"78","text":"79"},"Update the dependencies array to be: [getOrg, user]",{"range":"80","text":"81"},[941,956],"[email, loginWithRedirect, organizations]",[1117,1123],"[getOrg, user]"]